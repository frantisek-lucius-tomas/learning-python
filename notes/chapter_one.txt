math operators in python :

| ** | exponent - 2 ** 3 = 8
| %  | modulu - 10 % 3 = 1
| // | integer division - 22 // 8 = 2
| /  | division - 10 / 2 = 5
| *  | multiplication - 5 * 5 = 25
| -  | subtraction - 5 - 2 = 3
| +  | addition - 4 + 4 = 8

common data types : 

| integers | - int = 1, 3, 6, 4
| float    | - float = 1.5, 3.6, 6.3, 4.0
| string   | - str = 'hello', 'a', 'h ! 23'

string concatenation : 

'Alice' + 'Bob' = 'AliceBob'

string replication : 

'Alice' * 5 = 'AliceAliceAliceAliceAlice'

variables : 

initialized variable | name = 20
overwriting variable | name = name + 20

comment : 

comment start with # plus text

print('print text in string in terminal')
name = input() ask and store value
len('cau') = 3 give lenght of text

a value that is passed to a function call is an argument.

str() transfer number to string
int() transfer float and string to a number
float() transfer int number to a float number

sumary : 

you can compute expressions with a calculator or type string concatenations with a word processor.
you can even do string replication easily by copying and pasting text. but expressions,
and their component values— operators, variables, and function calls—are the basic building
blocks that make programs. Once you know how to handle these elements, you will be able to instruct
python to operate on large amounts of data for you. it is good to remember the different types of
operators (+, -, *, /, //, %, and ** for math operations, and + and * for string operations) and the
three data types (integers, floating-point numbers, and strings) introduced in this chapter. a few different
functions were introduced as well. the print() and input() functions handle simple text output (to the screen)
and input (from the keyboard). the len() function takes a string and evaluates to an int of the number of
characters in the string. the str(), int(), and float() functions will evaluate to the string, integer, or
floating-point number form of the value they are passed.

I ended up on page 55
